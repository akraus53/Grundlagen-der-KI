name: Long Usage
on:
  push:
    branches:
      - master
              
jobs:
  build:
    name: Release all Markdown Files as PDFs 
    runs-on: ubuntu-latest
    steps:
      - name: get system date
        run: |
          echo "::set-env name=CURRENTDATE::$(date)"
      - name: Replace Spaces with _
        id: regex
        uses: frabert/replace-string-action@v1.1
        with:
          # Regular expression pattern
          pattern: '[ :]'
          # The input string
          string: "${{env.CURRENTDATE}}"
          # What to replace with
          replace-with: "_"
          # Flags to use when matching
          flags: g # optional
      - name: Checkout code
        uses: actions/checkout@v2
      - name: install pandoc
        run: |
          sudo apt-get install texlive-latex-extra
          sudo apt-get install pandoc
          dpkg -L pandoc
          pandoc -v
      - name: convert all files
        run: |
          find . -name '*.md' > filelist.dat 
          # list down all the file in a temp file

          while read file
          do
              pdf_file=$( echo "$file" | sed -e 's/\.md//g')
              # the above command will store 'home.md' as 'home' to variable 'pdf_file'
              # hence '$html_file.pdf' equal to 'home.pdf'

              pandoc -s -o $pdf_file.pdf $file 
              rm $file
          done <  filelist.dat
          # with while loop read each line from the file. Here each line is a locatin of .md file 

          rm filelist.dat
          #delete the temporary file finally
          zip pdfs.zip -r ./ -x .git .github
  
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.regex.outputs.replaced}}
          release_name: PDF Versions on ${{env.CURRENTDATE}}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./pdfs.zip
          asset_name: pdfs.zip
          asset_content_type:	application/zip
